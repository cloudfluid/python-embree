name: Build Wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_SKIP: pp* *-win32 *musllinux*
      CIBW_ARCHS: auto64
      CIBW_TEST_REQUIRES: pytest numpy
      CIBW_TEST_COMMAND: pytest -v {project}/tests
      CIBW_BEFORE_BUILD_LINUX: "yum install -y cmake wget; pip install cython; bash {project}/ci/embree3.bash"
      CIBW_REPAIR_WHEEL_COMMAND_LINUX: "LD_LIBRARY_PATH=/root/embree/lib; auditwheel repair -w {dest_dir} {wheel}"
      CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair --add-path embree3\\bin; -w {dest_dir} {wheel}"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      name: Install Python
      with:
        python-version: '3.7'
    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==2.3.1
    - name: Install Embree On Windows
      if: matrix.os == 'windows-latest'
      run: |
        ci/embree3.bat
    - name: Build wheels
      run: |
        python -m cibuildwheel --output-dir wheelhouse
    - uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: ./wheelhouse
    - name: Upload To PyPi
      if: false
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        pip install twine
        twine upload ./wheelhouse/*
